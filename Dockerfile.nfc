#ARG BASE_IMAGE=ubuntu:20.04
#ARG BASE_IMAGE=ubuntu:18.04
#ARG BASE_IMAGE=osrf/ros:melodic-desktop-full
ARG BASE_IMAGE=jskrobotics/agent_system:ros_melodic_2021
FROM ${BASE_IMAGE}

SHELL ["/bin/bash", "-c"]
ENV DEBIAN_FRONTEND=noninteractive LANG=C.UTF-8 LC_ALL=C.UTF-8 TZ=Asia/Tokyo

RUN apt update -q -qq && \
    apt install -y -q -qq tzdata && \
    apt clean -q -y && \
    rm -rf /var/lib/apt/lists/

RUN apt update -q -qq && \
    apt install -y -q -qq g++  wget make git gcc curl pkg-config \
                          pcsc-tools pcscd libpcsclite-dev \
                          automake autoconf-archive libtool libusb-1.0-0-dev \
                          && \
    apt clean -q -y && \
    rm -rf /var/lib/apt/lists/

WORKDIR /src
RUN curl https://ccid.apdu.fr/files/ccid-1.4.35.tar.bz2 | tar jxf -
WORKDIR /src/

RUN cd ccid-1.4.35 && \
    ./bootstrap && \
    ./configure && \
    make && make install

## for ROS/euslisp environment
RUN apt update -q -qq && \
    apt install -y -q -qq ros-${ROS_DISTRO}-roseus ros-${ROS_DISTRO}-pr2eus && \
    apt clean -q -y && \
    rm -rf /var/lib/apt/lists/

WORKDIR /ros_node
COPY pcsclib.cpp .
COPY pcsclib.l .
COPY pcsc-node.l .

RUN g++ -o pcsclib_for_eus.so -fPIC --shared pcsclib.cpp $(pkg-config --cflags libpcsclite) $(pkg-config --libs libpcsclite)

CMD ["bash", "-c", "source /opt/ros/melodic/setup.bash; pcscd; sleep 3; roseus pcsc-node.l"]

## docker build -f Dockerfile.nfc -t nfc18.04 .
## docker run --net=host --privileged -it nfc18.04
